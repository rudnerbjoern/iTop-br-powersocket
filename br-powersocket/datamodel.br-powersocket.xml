<?xml version="1.0" encoding="UTF-8"?>
<itop_design xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.7">
    <classes>
        <class id="PowerSocket" _delta="define">
            <parent>cmdbAbstractObject</parent>
            <properties>
                <category>bizmodel,searchable</category>
                <abstract>false</abstract>
                <key_type>autoincrement</key_type>
                <db_table>powersocket</db_table>
                <db_key_field>id</db_key_field>
                <db_final_class_field />
                <naming>
                    <attributes>
                        <attribute id="name" />
                        <attribute id="pdu_name" />
                    </attributes>
                </naming>
                <fields_semantic>
                    <state_attribute>status</state_attribute>
                </fields_semantic>
                <style>
                    <icon>images/powersocket.svg</icon>
                </style>
                <icon>images/powersocket.png</icon>
                <reconciliation>
                    <attributes>
                        <attribute id="name" />
                        <attribute id="pdu_id" />
                        <attribute id="pdu_name" />
                    </attributes>
                </reconciliation>
                <obsolescence>
                    <condition>pdu_id_obsolescence_flag</condition>
                </obsolescence>
            </properties>
            <event_listeners>
                <event_listener id="CheckPowerSocketUpdate">
                    <event>EVENT_DB_CHECK_TO_WRITE</event>
                    <callback>CheckPowerSocketOnUpdate</callback>
                    <rank>1</rank>
                </event_listener>
            </event_listeners>
            <fields>
                <field id="name" xsi:type="AttributeString">
                    <sql>name</sql>
                    <default_value />
                    <is_null_allowed>false</is_null_allowed>
                </field>
                <field id="comment" xsi:type="AttributeText">
                    <sql>comment</sql>
                    <default_value />
                    <is_null_allowed>true</is_null_allowed>
                </field>
                <field id="pdu_id" xsi:type="AttributeExternalKey">
                    <sql>pdu_id</sql>
                    <target_class>PDU</target_class>
                    <is_null_allowed>false</is_null_allowed>
                    <on_target_delete>DEL_MANUAL</on_target_delete>
                </field>
                <field id="pdu_name" xsi:type="AttributeExternalField">
                    <extkey_attcode>pdu_id</extkey_attcode>
                    <target_attcode>name</target_attcode>
                </field>
                <field id="status" xsi:type="AttributeEnum">
                    <values>
                        <value id="stock">stock</value>
                        <value id="active">active</value>
                        <value id="inactive">inactive</value>
                        <value id="obsolete">obsolete</value>
                    </values>
                    <sql>status</sql>
                    <default_value>active</default_value>
                    <is_null_allowed>true</is_null_allowed>
                    <display_style>radio_horizontal</display_style>
                </field>
                <field id="datacenterdevice_id" xsi:type="AttributeExternalKey">
                    <sql>datacenterdevice_id</sql>
                    <target_class>DatacenterDevice</target_class>
                    <is_null_allowed>true</is_null_allowed>
                    <on_target_delete>DEL_MANUAL</on_target_delete>
                </field>
                <field id="datacenterdevice_name" xsi:type="AttributeExternalField">
                    <extkey_attcode>datacenterdevice_id</extkey_attcode>
                    <target_attcode>name</target_attcode>
                </field>
            </fields>
            <methods>
                <method id="CheckPowerSocketOnUpdate">
                    <static>false</static>
                    <access>public</access>
                    <type>EventListener</type>
                    <code>
                        <![CDATA[public function CheckPowerSocketOnUpdate(Combodo\iTop\Service\Events\EventData $oEventData)
{
    // This method will block the PowerSocket modification, by adding a Check Issue
    $aChanges = $this->ListChanges();

    // Current User may not be allowed to see User class, so we can't use
    if (array_key_exists('datacenterdevice_id', $aChanges)) {
        // Make sure there is a free socket on the target
        if ($this->Get('datacenterdevice_id') != 0) {
            $datacenterdevice_id = $this->Get('datacenterdevice_id');
            $oDatacenterDeviceObject = MetaModel::GetObject('DatacenterDevice', $datacenterdevice_id, false);
            if (is_object($oDatacenterDeviceObject)) {
                // Check if PowerSockets are already connected
                if (($oDatacenterDeviceObject->Get('powerAsocket_id') != 0) && ($oDatacenterDeviceObject->Get('powerBsocket_id') != 0)) {
                    // Check if we are not already connected
                    if (($oDatacenterDeviceObject->Get('powerAsocket_id') != $this->GetKey()) && ($oDatacenterDeviceObject->Get('powerBsocket_id') != $this->GetKey())) {
                        // Generate Error Message
                        $this->AddCheckIssue(Dict::Format('Class:PowerSocket/Error:NoFreePowerSocketOnDatacenterDevice'));
                    }
                }
            }
        }
    }
}]]>
                    </code>
                </method>
                <method id="ConnectPowerSocket" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-cmdbAbstractObject</type>
                    <code>
                        <![CDATA[public function ConnectPowerSocket($datacenterdevice_id)
{
    if ($datacenterdevice_id != 0) {
        $oDatacenterDeviceObject = MetaModel::GetObject('DatacenterDevice', $datacenterdevice_id, false);
        if (is_object($oDatacenterDeviceObject)) {
        // find powerAsocket_id or powerBsocket_id to be empty
            if ($oDatacenterDeviceObject->Get('powerAsocket_id') == 0) {
                //set powersource form pdu_id
                $oDatacenterDeviceObject->Set('powerA_id', $this->Get('pdu_id'));
                // set powersocket from id
                $oDatacenterDeviceObject->Set('powerAsocket_id', $this->GetKey());
                $oDatacenterDeviceObject->DBUpdate();
            } elseif ($oDatacenterDeviceObject->Get('powerBsocket_id') == 0) {
                //set powersource form pdu_id
                $oDatacenterDeviceObject->Set('powerB_id', $this->Get('pdu_id'));
                // set powersocket from id
                $oDatacenterDeviceObject->Set('powerBsocket_id', $this->GetKey());
                $oDatacenterDeviceObject->DBUpdate();
            } elseif (($oDatacenterDeviceObject->Get('powerAsocket_id') != $this->GetKey()) && ($oDatacenterDeviceObject->Get('powerBsocket_id') != $this->GetKey())) {
                // unable to connect to powerAsocket or powerBsocket - so remove connection again
                $this->Set('datacenterdevice_id','');

                $this->SetSessionMessageFromInstance('powersocket-1', 'Could not assign PowerSocket to DatacenterDevice, no free socket available', 'error', 1);
            }
        }
    }
}]]>
                    </code>
                </method>
                <method id="DisconnectPowerSocket" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-cmdbAbstractObject</type>
                    <code>
                        <![CDATA[public function DisconnectPowerSocket($datacenterdevice_id)
{
    if ($datacenterdevice_id != 0) {
        $oDatacenterDeviceObject = MetaModel::GetObject('DatacenterDevice', $datacenterdevice_id, false);
        if (is_object($oDatacenterDeviceObject)) {
            // find powerAsocket_id or powerBsocket_id
            if ($oDatacenterDeviceObject->Get('powerAsocket_id') == $this->GetKey()) {
                $oDatacenterDeviceObject->Set('powerA_id', '');
                $oDatacenterDeviceObject->Set('powerAsocket_id', '');
                $oDatacenterDeviceObject->DBUpdate();
            } elseif ($oDatacenterDeviceObject->Get('powerBsocket_id') == $this->GetKey()) {
                $oDatacenterDeviceObject->Set('powerB_id', '');
                $oDatacenterDeviceObject->Set('powerBsocket_id', '');
                $oDatacenterDeviceObject->DBUpdate();
            }
        }
    }
}]]>
                    </code>
                </method>
                <method id="AfterInsert" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-DBObject</type>
                    <code>
                        <![CDATA[public function AfterInsert()
{
    if ($this->Get('datacenterdevice_id') != 0)
        $this->ConnectPowerSocket($this->Get('datacenterdevice_id'));
    parent::AfterInsert();
}]]>
                    </code>
                </method>
                <method id="OnUpdate" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-DBObject</type>
                    <code>
                        <![CDATA[public function OnUpdate()
{
    $aChanges = $this->ListChanges();
    if (array_key_exists('datacenterdevice_id', $aChanges)) {
        // record in the memory object that the DatacenterDevice was changed
        $this->iDatacenterDeviceChanged = true;
        // disconnect the old DatacenterDevice
        $this->DisconnectPowerSocket($this->GetOriginal('datacenterdevice_id'));
    }
    parent::OnUpdate();
}]]>
                    </code>
                </method>
                <method id="AfterUpdate" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-DBObject</type>
                    <code>
                        <![CDATA[public function AfterUpdate()
{
    // The PowerSocket is updated in DB and DatacenterDevice was changed
    if (isset($this->iDatacenterDeviceChanged))
        $this->ConnectPowerSocket($this->Get('datacenterdevice_id'));
    parent::AfterUpdate();
}]]>
                    </code>
                </method>
                <method id="OnDelete" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-DBObject</type>
                    <code>
                        <![CDATA[public function OnDelete()
{
    $aChanges = $this->ListChanges();
    if (array_key_exists('datacenterdevice_id', $aChanges))
        $this->DisconnectPowerSocket($this->Get('datacenterdevice_id'));
    parent::OnDelete();
}]]>
                    </code>
                </method>
            </methods>
            <relations>
                <relation id="impacts">
                    <neighbours>
                        <neighbour id="datacenterdevice">
                            <attribute>datacenterdevice_id</attribute>
                        </neighbour>
                    </neighbours>
                </relation>
            </relations>
            <presentation>
                <details>
                    <items>
                        <item id="name">
                            <rank>10</rank>
                        </item>
                        <item id="status">
                            <rank>20</rank>
                        </item>
                        <item id="pdu_id">
                            <rank>30</rank>
                        </item>
                        <item id="datacenterdevice_id">
                            <rank>40</rank>
                        </item>
                        <item id="comment">
                            <rank>50</rank>
                        </item>
                    </items>
                </details>
                <list>
                    <items>
                        <item id="name">
                            <rank>10</rank>
                        </item>
                        <item id="status">
                            <rank>20</rank>
                        </item>
                        <item id="datacenterdevice_id">
                            <rank>43</rank>
                        </item>
                        <item id="comment">
                            <rank>40</rank>
                        </item>
                    </items>
                </list>
                <search>
                    <items>
                        <item id="name">
                            <rank>10</rank>
                        </item>
                        <item id="status">
                            <rank>20</rank>
                        </item>
                        <item id="pdu_id">
                            <rank>40</rank>
                        </item>
                        <item id="datacenterdevice_id">
                            <rank>50</rank>
                        </item>
                    </items>
                </search>
                <default_search >
                    <items>
                        <item id="friendlyname">
                            <rank>10</rank>
                        </item>
                        <item id="status">
                            <rank>20</rank>
                        </item>
                        <item id="pdu_id">
                            <rank>40</rank>
                        </item>
                        <item id="datacenterdevice_id">
                            <rank>50</rank>
                        </item>
                    </items>
                </default_search>
            </presentation>
        </class>
        <class id="PDU" _delta="must_exist">
            <fields>
                <field id="powersocket_list" xsi:type="AttributeLinkedSet" _delta="define">
                    <linked_class>PowerSocket</linked_class>
                    <ext_key_to_me>pdu_id</ext_key_to_me>
                    <edit_mode>in_place</edit_mode>
                    <tracking_level>all</tracking_level>
                    <count_min>0</count_min>
                    <count_max>0</count_max>
                    <duplicates>false</duplicates>
                </field>
            </fields>
            <presentation>
                <details>
                    <items>
                        <item id="powersocket_list" _delta="define">
                            <rank>105</rank>
                        </item>
                    </items>
                </details>
            </presentation>
        </class>
        <class id="DatacenterDevice" _delta="must_exist">
            <fields>
                <field id="powerAsocket_id" xsi:type="AttributeExternalKey" _delta="define">
                    <filter><![CDATA[SELECT PowerSocket WHERE pdu_id = :this->powerA_id AND datacenterdevice_id = 0]]></filter>
                    <dependencies>
                        <attribute id="powerA_id" />
                    </dependencies>
                    <sql>powerAsocket_id</sql>
                    <target_class>PowerSocket</target_class>
                    <is_null_allowed>true</is_null_allowed>
                    <on_target_delete>DEL_MANUAL</on_target_delete>
                    <allow_target_creation>false</allow_target_creation>
                </field>
                <field id="powerAsocket_name" xsi:type="AttributeExternalField" _delta="define">
                    <extkey_attcode>powerAsocket_id</extkey_attcode>
                    <target_attcode>name</target_attcode>
                </field>
                <field id="powerBsocket_id" xsi:type="AttributeExternalKey" _delta="define">
                    <filter><![CDATA[SELECT PowerSocket WHERE pdu_id = :this->powerB_id AND datacenterdevice_id = 0]]></filter>
                    <dependencies>
                        <attribute id="powerB_id" />
                    </dependencies>
                    <sql>powerBsocket_id</sql>
                    <target_class>PowerSocket</target_class>
                    <is_null_allowed>true</is_null_allowed>
                    <on_target_delete>DEL_MANUAL</on_target_delete>
                    <allow_target_creation>false</allow_target_creation>
                </field>
                <field id="powerBsocket_name" xsi:type="AttributeExternalField" _delta="define">
                    <extkey_attcode>powerBsocket_id</extkey_attcode>
                    <target_attcode>name</target_attcode>
                </field>
            </fields>
            <methods>
                <method id="ConnectPowerSocket" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-cmdbAbstractObject</type>
                    <code>
                        <![CDATA[public function ConnectPowerSocket($powerSocketId)
{
    if ($powerSocketId != 0) {
        $oPowerSocketObject = MetaModel::GetObject('PowerSocket', $powerSocketId, false);
        // FYI: MetaModel::GetObject('PowerSocket', 0); generates a FatalError
        if (is_object($oPowerSocketObject)) {
            $oPowerSocketObject->Set('datacenterdevice_id', $this->GetKey());
            $oPowerSocketObject->DBUpdate();
        }
    }
}]]>
                    </code>
                </method>
                <method id="DisconnectPowerSocket" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-cmdbAbstractObject</type>
                    <code>
                        <![CDATA[public function DisconnectPowerSocket($powerSocketId)
{
    if ($powerSocketId != 0) {
        $oPowerSocketObject = MetaModel::GetObject('PowerSocket', $powerSocketId, false);
        // FYI: MetaModel::GetObject('PowerSocket', 0); generates a FatalError
        if (is_object($oPowerSocketObject)) {
            $oPowerSocketObject->Set('datacenterdevice_id', '');
            $oPowerSocketObject->DBUpdate();
        }
    }
}]]>
                    </code>
                </method>
                <method id="AfterInsert" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-DBObject</type>
                    <code>
                        <![CDATA[public function AfterInsert()
{
    if ($this->Get('powerAsocket_id') != 0)
        $this->ConnectPowerSocket($this->Get('powerAsocket_id'));
    if ($this->Get('powerBsocket_id') != 0)
        $this->ConnectPowerSocket($this->Get('powerBsocket_id'));
    parent::AfterInsert();
}]]>
                    </code>
                </method>
                <method id="OnUpdate" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-DBObject</type>
                    <code>
                        <![CDATA[public function OnUpdate()
{
    $aChanges = $this->ListChanges();
    if (array_key_exists('powerAsocket_id', $aChanges)) {
        // record in the Location memory object that the PowerSocketA was changed
        $this->iPowerSocketAChanged = true;
        // disconnect the old PowerSocketA
        $this->DisconnectPowerSocket($this->GetOriginal('powerAsocket_id'));
    }
    if (array_key_exists('powerBsocket_id', $aChanges)) {
        // record in the Location memory object that the PowerSocketB was changed
        $this->iPowerSocketBChanged = true;
        // disconnect the old PowerSocketB
        $this->DisconnectPowerSocket($this->GetOriginal('powerBsocket_id'));
    }
    parent::OnUpdate();
}]]>
                    </code>
                </method>
                <method id="AfterUpdate" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-DBObject</type>
                    <code>
                        <![CDATA[public function AfterUpdate()
{
    // The DC device is updated in DB and PowerSocket was changed
    if (isset($this->iPowerSocketAChanged))
        $this->ConnectPowerSocket($this->Get('powerAsocket_id'));
    if (isset($this->iPowerSocketBChanged))
        $this->ConnectPowerSocket($this->Get('powerBsocket_id'));
    parent::AfterUpdate();
}]]>
                    </code>
                </method>
                <method id="OnDelete" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-DBObject</type>
                    <code>
                        <![CDATA[public function OnDelete()
{
    $aChanges = $this->ListChanges();
    if (array_key_exists('powerAsocket_id', $aChanges))
        $this->DisconnectPowerSocket($this->Get('powerAsocket_id'));
    if (array_key_exists('powerBsocket_id', $aChanges))
        $this->DisconnectPowerSocket($this->Get('powerBsocket_id'));
    parent::OnDelete();
}]]>
                    </code>
                </method>
            </methods>
            <presentation>
                <details>
                    <items>
                        <item id="powerAsocket_id" _delta="define">
                            <rank>131</rank>
                        </item>
                        <item id="powerBsocket_id" _delta="define">
                            <rank>141</rank>
                        </item>
                    </items>
                </details>
                <search>
                    <items>
                        <item id="powerAsocket_id" _delta="define">
                            <rank>101</rank>
                        </item>
                        <item id="powerBsocket_id" _delta="define">
                            <rank>111</rank>
                        </item>
                    </items>
                </search>
            </presentation>
        </class>
        <class id="Server" _delta="must_exist">
            <presentation>
                <details>
                    <items>
                        <item id="col:col2" _delta="must_exist">
                            <items>
                                <item id="fieldset:Server:power" _delta="must_exist">
                                    <rank>20</rank>
                                    <items>
                                        <item id="powerAsocket_id" _delta="define">
                                            <rank>11</rank>
                                        </item>
                                        <item id="powerBsocket_id" _delta="define">
                                            <rank>21</rank>
                                        </item>
                                    </items>
                                </item>
                            </items>
                        </item>
                    </items>
                </details>
                <search>
                    <items>
                        <item id="powerAsocket_id" _delta="define">
                            <rank>101</rank>
                        </item>
                        <item id="powerBsocket_id" _delta="define">
                            <rank>111</rank>
                        </item>
                    </items>
                </search>
            </presentation>
        </class>
        <class id="NetworkDevice" _delta="must_exist">
            <presentation>
                <details>
                    <items>
                        <item id="col:col2" _delta="must_exist">
                            <items>
                                <item id="fieldset:Server:power" _delta="must_exist">
                                    <rank>20</rank>
                                    <items>
                                        <item id="powerAsocket_id" _delta="define">
                                            <rank>11</rank>
                                        </item>
                                        <item id="powerBsocket_id" _delta="define">
                                            <rank>21</rank>
                                        </item>
                                    </items>
                                </item>
                            </items>
                        </item>
                    </items>
                </details>
                <search>
                    <items>
                        <item id="powerAsocket_id" _delta="define">
                            <rank>101</rank>
                        </item>
                        <item id="powerBsocket_id" _delta="define">
                            <rank>111</rank>
                        </item>
                    </items>
                </search>
            </presentation>
        </class>
        <class id="StorageSystem" _delta="must_exist">
            <presentation>
                <details>
                    <items>
                        <item id="col:col2" _delta="must_exist">
                            <items>
                                <item id="fieldset:Server:power" _delta="must_exist">
                                    <rank>20</rank>
                                    <items>
                                        <item id="powerAsocket_id" _delta="define">
                                            <rank>11</rank>
                                        </item>
                                        <item id="powerBsocket_id" _delta="define">
                                            <rank>21</rank>
                                        </item>
                                    </items>
                                </item>
                            </items>
                        </item>
                    </items>
                </details>
                <search>
                    <items>
                        <item id="powerAsocket_id" _delta="define">
                            <rank>101</rank>
                        </item>
                        <item id="powerBsocket_id" _delta="define">
                            <rank>111</rank>
                        </item>
                    </items>
                </search>
            </presentation>
        </class>
        <class id="SANSwitch" _delta="must_exist">
            <presentation>
                <details>
                    <items>
                        <item id="col:col2" _delta="must_exist">
                            <items>
                                <item id="fieldset:Server:power" _delta="must_exist">
                                    <rank>20</rank>
                                    <items>
                                        <item id="powerAsocket_id" _delta="define">
                                            <rank>11</rank>
                                        </item>
                                        <item id="powerBsocket_id" _delta="define">
                                            <rank>21</rank>
                                        </item>
                                    </items>
                                </item>
                            </items>
                        </item>
                    </items>
                </details>
                <search>
                    <items>
                        <item id="powerAsocket_id" _delta="define">
                            <rank>101</rank>
                        </item>
                        <item id="powerBsocket_id" _delta="define">
                            <rank>111</rank>
                        </item>
                    </items>
                </search>
            </presentation>
        </class>
        <class id="TapeLibrary" _delta="must_exist">
            <presentation>
                <details>
                    <items>
                        <item id="col:col2" _delta="must_exist">
                            <items>
                                <item id="fieldset:Server:power" _delta="must_exist">
                                    <rank>20</rank>
                                    <items>
                                        <item id="powerAsocket_id" _delta="define">
                                            <rank>11</rank>
                                        </item>
                                        <item id="powerBsocket_id" _delta="define">
                                            <rank>21</rank>
                                        </item>
                                    </items>
                                </item>
                            </items>
                        </item>
                    </items>
                </details>
                <search>
                    <items>
                        <item id="powerAsocket_id" _delta="define">
                            <rank>101</rank>
                        </item>
                        <item id="powerBsocket_id" _delta="define">
                            <rank>111</rank>
                        </item>
                    </items>
                </search>
            </presentation>
        </class>
        <class id="NAS" _delta="must_exist">
            <presentation>
                <details>
                    <items>
                        <item id="col:col2" _delta="must_exist">
                            <items>
                                <item id="fieldset:Server:power" _delta="must_exist">
                                    <rank>20</rank>
                                    <items>
                                        <item id="powerAsocket_id" _delta="define">
                                            <rank>11</rank>
                                        </item>
                                        <item id="powerBsocket_id" _delta="define">
                                            <rank>21</rank>
                                        </item>
                                    </items>
                                </item>
                            </items>
                        </item>
                    </items>
                </details>
                <search>
                    <items>
                        <item id="powerAsocket_id" _delta="define">
                            <rank>101</rank>
                        </item>
                        <item id="powerBsocket_id" _delta="define">
                            <rank>111</rank>
                        </item>
                    </items>
                </search>
            </presentation>
        </class>
    </classes>
    <menus>
        <menu id="ConfigManagementOverview" xsi:type="DashboardMenuNode" _delta="must_exist">
            <definition>
                <cells>
                    <cell id="0">
                        <dashlets>
                            <dashlet id="99" xsi:type="DashletBadge" _delta="define">
                                <rank>10</rank>
                                <class>PowerSocket</class>
                            </dashlet>
                        </dashlets>
                    </cell>
                </cells>
            </definition>
        </menu>
    </menus>
</itop_design>
